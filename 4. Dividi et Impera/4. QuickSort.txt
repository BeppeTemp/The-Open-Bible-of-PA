
-------------------------------------------------------------------- Definizione del problema

Input: un array v non ordinato con un inizio sx e una fine dx.

Obbiettivo: Vogliamo ordinare l'array v.

Funzionamento:
  * Decomposizione: se la sequenza ha almeno due elementi, scegli un elemento pivot e dividi la sequenza in
                    due sotto-sequenza in modo tale che la prima contenga elementi minori o uguali al pivot
                    e la seconda gli elementi maggiori o uguali al pivot.
  * Ricorsione: Ordina ricorsivamente le due sotto-sequenze.
  * Ricombinazione: non occorre fare alcun lavoro di ricombinazione.

-------------------------------------------------------------------- Pseudocodice

QuickSort(v, sx, dx){
    if(sx < dx){
        scegli un pivot p nell'intervallo [sx,...,dx]
        indiceFinalePivot = Distribuzione(v, sx, p, dx)
        QuickSort(v, sx, indiceFinalePivot-1)
        QuickSort(v, indiceFinalePivot+1, dx)
    }
}

-------------------------------------------------------------------- Distribuzione

Funzionamento:
  * Pone il pivot nella posizione v[dx], se già lo è non fa nulla.
  * Usa due indici i e j per scandire il segmento: i parte da s e scorre verso destra, j parte da d - 1 e scorre verso 
    sinistra fino a quando i <= j.
  * Ogni votla che si ha un v[i]>pivot e v[j]<pivot, scambia v[i] con v[j] e poi riprende la scansione.
  * Alla fine della scansione posizione il pivot nella posizione corretta.

-------------------------------------------------------------------- Pseudocodice:

Distribuzione(v, sx, p, dx){

    if(v[p] != v[dx])  Scambia(v[p], v[dx]);

    i = sx;
    j = dx - 1;

    while(i<=j){
        while((i <= j) && (v[i] <= v[dx])) i = i + 1;
        
        while((i <= j) && (v[j] >= v[dx])) j = j - 1;
        
        if(i < j) Scambia(v[i]), v[j]);
            
        i = i + 1;
        j = j - 1;
        
    }
    if(v[i] != v[dx]) Scambia(v[i], v[dx]);
    return i;
}

Scambia(v[i], v[j]){
    temp = v[j];
    v[j] = v[i];
    v[i] = temp;
}

-------------------------------------------------------------------- Relazione di ricorrenza

La relazione di ricorrenza che esprime il tempo di esecuzione è la seguente:
        | c0               se n<=1 
T(n) <= |
        | T(r-1)+T(n-r)+cn altrimenti

-------------------------------------------------------------------- Tempo di esecuzione

Distribuzione:  O(n)

QuickSort caso pessimo:  T(n) = O(n^2)

QuickSort caso ottimo:  T(n) = O(nlogn)

QuickSort Randomizzato:  T(n) = O(nlogn)

QuickSort Tempo Medio di esecuzione: T(n) = O(nlogn)

-------------------------------------------------------------------- Fin
